{
  "openapi": "3.0.1",
  "info": {
    "title": "HRMS",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/app/review": {
      "post": {
        "tags": [
          "App Reviews"
        ],
        "summary": "Add a review for an app",
        "description": "Allows an authenticated user to add a review for a specific app.\nA JWT token must be provided for authorization.\n",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "required": [
                  "app_id",
                  "comment",
                  "rating"
                ],
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "integer",
                    "description": "ID of the app being reviewed.",
                    "example": 123
                  },
                  "comment": {
                    "type": "string",
                    "description": "A textual review for the app.",
                    "example": "This app is really useful and easy to use!"
                  },
                  "rating": {
                    "maximum": 5,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Rating for the app (1-5).",
                    "example": 4
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Review successfully added.",
            "content": {}
          },
          "400": {
            "description": "Invalid request body or data.",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - JWT is missing or invalid.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "review"
      }
    },
    "/api/v1/app/{app_id}/review": {
      "get": {
        "tags": [
          "App Reviews"
        ],
        "summary": "Get reviews for a specific app by the authenticated user",
        "description": "Allows an authenticated user to retrieve details of a specific app along with their reviews for that app.\nA JWT token must be provided for authorization.\n",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "ID of the app for which to fetch reviews",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "App details and reviews successfully retrieved",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - JWT is missing or invalid",
            "content": {}
          },
          "404": {
            "description": "App not found",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/ats": {
      "post": {
        "tags": [
          "ATS"
        ],
        "summary": "---",
        "description": "This endpoint allows uploading one or more resumes (PDF, DOC, DOCX formats) to analyze their content and compare them against the details of a specified job posting. It extracts key applicant information (e.g., name, phone number, email, current position) and calculates a similarity score based on the job's title, description, requirements, and responsibilities.\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file",
                  "job_id"
                ],
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string",
                    "description": "The ID of the job posting to compare resumes against."
                  },
                  "file": {
                    "type": "string",
                    "description": "One or more resume files in PDF, DOC, or DOCX format. Use the `file` parameter multiple times to upload more than one file.\n",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response with analyzed applicants.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applicant": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "The email address extracted from the resume."
                          },
                          "file_name": {
                            "type": "string",
                            "description": "The original filename of the uploaded resume."
                          },
                          "first_name": {
                            "type": "string",
                            "description": "The first name extracted from the resume."
                          },
                          "id": {
                            "type": "integer",
                            "description": "The unique ID of the applicant."
                          },
                          "job": {
                            "type": "object",
                            "properties": {
                              "job_description": {
                                "type": "string",
                                "description": "The description of the job."
                              },
                              "job_title": {
                                "type": "string",
                                "description": "The title of the job."
                              },
                              "requirements": {
                                "type": "string",
                                "description": "The requirements of the job."
                              },
                              "responsibilities": {
                                "type": "string",
                                "description": "The responsibilities of the job."
                              }
                            },
                            "description": "The details of the job posting used for comparison."
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number extracted from the resume."
                          },
                          "position": {
                            "type": "string",
                            "description": "The current position/title of the applicant."
                          },
                          "similarity": {
                            "type": "number",
                            "description": "Similarity score between the resume and the job posting.",
                            "format": "float"
                          },
                          "url": {
                            "type": "string",
                            "description": "The Azure storage URL of the uploaded resume."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid parameters.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No file part in the request"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Job posting not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Job not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chat": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Create a new chat room and add participants",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "required": [
                  "employee_id"
                ],
                "type": "object",
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "ID of the employee to be added to the chat room."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Chat room created successfully.",
            "content": {}
          },
          "400": {
            "description": "Bad Request - Missing or invalid data.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/chat/{room_id}": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Retrieve chat room(s) for the current user",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "description": "ID of the chat room to retrieve. If omitted, all chat rooms for the user are returned.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Chat room(s) retrieved successfully.",
            "content": {}
          },
          "404": {
            "description": "Room not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/chat/messages": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Send a message to a specific chat room",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "required": [
                  "message",
                  "room_code"
                ],
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Content of the message to send."
                  },
                  "room_code": {
                    "type": "string",
                    "description": "Unique code of the chat room to send the message to."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Message sent successfully.",
            "content": {}
          },
          "400": {
            "description": "Bad Request - Missing JSON in request.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/chat/messages/{room_id}": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Retrieve chat messages for a specific chat room",
        "parameters": [
          {
            "name": "room_id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Chat messages retrieved successfully.",
            "content": {}
          },
          "404": {
            "description": "Chat room or messages not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/chat/": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Retrieve chat room(s) for the current user",
        "responses": {
          "200": {
            "description": "Chat room(s) retrieved successfully.",
            "content": {}
          },
          "404": {
            "description": "Room not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/chatbot": {
      "post": {
        "tags": [
          "Chatbot"
        ],
        "summary": "Chatbot AI Response",
        "description": "This endpoint returns an AI-generated response to a user's prompt. Requires user authentication.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token to authorize user.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string",
                    "example": "What are my tasks for today?"
                  }
                },
                "description": "JSON object containing the user prompt."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "AI-generated response",
            "content": {}
          },
          "400": {
            "description": "Bad request, either due to missing prompt or employee not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "prompt"
      }
    },
    "/api/v1/company": {
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Add a new company",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Address of the company",
                    "example": "123 Main St, Springfield"
                  },
                  "admin_id": {
                    "type": "integer",
                    "description": "ID of the company admin",
                    "example": 1
                  },
                  "contact_email": {
                    "type": "string",
                    "description": "Contact email of the company",
                    "example": "contact@acmecorp.com"
                  },
                  "contact_phone": {
                    "type": "string",
                    "description": "Contact phone number of the company",
                    "example": "+1234567890"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the company",
                    "example": "Acme Corp"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Company added successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "company": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "example": "123 Main St, Springfield"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-08-26T12:34:56.000Z"
                        },
                        "email": {
                          "type": "string",
                          "example": "contact@acmecorp.com"
                        },
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Acme Corp"
                        },
                        "phone": {
                          "type": "string",
                          "example": "+1234567890"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-08-26T12:34:56.000Z"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Company added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Name is missing"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/company/{company_id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get details of a company along with associated entities",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "ID of the company to retrieve details for",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved company details",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "company": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "example": "123 Tech Lane, Silicon Valley, CA"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-01-01T00:00:00.000Z"
                        },
                        "email": {
                          "type": "string",
                          "example": "contact@techinnovations.com"
                        },
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Tech Innovations Inc."
                        },
                        "phone": {
                          "type": "string",
                          "example": "+1-555-1234"
                        },
                        "totalDepartments": {
                          "type": "integer",
                          "example": 10
                        },
                        "totalNoEmp": {
                          "type": "integer",
                          "example": 100
                        },
                        "totalPositions": {
                          "type": "integer",
                          "example": 20
                        },
                        "totalTraining": {
                          "type": "integer",
                          "example": 5
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-08-26T00:00:00.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Company not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Update Company",
        "description": "Updates the details of a specified company.",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "ID of the company to be updated.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "The address of the company."
                  },
                  "contact_email": {
                    "type": "string",
                    "description": "The contact email of the company."
                  },
                  "contact_phone": {
                    "type": "string",
                    "description": "The contact phone number of the company."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the company."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Company updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "company": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "contact_email": {
                          "type": "string"
                        },
                        "contact_phone": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Company updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request due to invalid JSON.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Company not found"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/contact": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Add a new emergency contact for the authenticated employee.",
        "description": "<br/>",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "required": [
                  "email",
                  "name",
                  "phone",
                  "relation"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the emergency contact."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the emergency contact."
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone number of the emergency contact."
                  },
                  "relation": {
                    "type": "string",
                    "description": "The relationship of the contact to the employee."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Emergency contact added successfully.",
            "content": {}
          },
          "400": {
            "description": "Invalid request or missing required fields.",
            "content": {}
          },
          "404": {
            "description": "Employee not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/contact/": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve emergency contact records for an employee.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "A list of emergency contacts for the employee.",
            "content": {}
          },
          "404": {
            "description": "Employee not found or no contacts found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/contact/{contact_id}": {
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update an existing emergency contact record for the authenticated employee.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "description": "The ID of the emergency contact record to be updated.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the emergency contact."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the emergency contact."
                  },
                  "phone": {
                    "type": "string",
                    "description": "The phone number of the emergency contact."
                  },
                  "relation": {
                    "type": "string",
                    "description": "The relationship of the contact to the employee."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Emergency contact record updated successfully.",
            "content": {}
          },
          "404": {
            "description": "Contact not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "contact_id"
      }
    },
    "/api/v1/contact/{employee_id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve emergency contact records for an employee.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The ID of the employee whose contacts are to be retrieved. If not provided, it fetches the authenticated user's contacts.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "A list of emergency contacts for the employee.",
            "content": {}
          },
          "404": {
            "description": "Employee not found or no contacts found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/department": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Add a new department",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "ID of the company to which the department belongs",
                    "example": 1
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "ID of the manager of the department (optional)",
                    "example": 3
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the department",
                    "example": "Human Resources"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Department added successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "department": {
                      "type": "object",
                      "properties": {
                        "company_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "department_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "manager_id": {
                          "type": "integer",
                          "example": 3
                        },
                        "name": {
                          "type": "string",
                          "example": "Human Resources"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Department added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/department/{company_id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get departments of a company",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "ID of the company to retrieve departments for",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved departments",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "departments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "company_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00.000Z"
                          },
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Engineering"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-08-26T00:00:00.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Company ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/department/{department_id}": {
      "patch": {
        "tags": [
          "Department"
        ],
        "summary": "Update a department",
        "description": "Updates the details of a specific department by ID.",
        "operationId": "updateDepartment",
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "description": "The ID of the department to update.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "The ID of the new company associated with the department."
                  },
                  "entity_id": {
                    "type": "integer",
                    "description": "The ID of the new entity associated with the department."
                  },
                  "manager_id": {
                    "type": "integer",
                    "description": "The ID of the new manager for the department."
                  },
                  "name": {
                    "type": "string",
                    "description": "The new name of the department."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Department updated successfully.",
            "content": {}
          },
          "400": {
            "description": "Bad request due to missing JSON in the request.",
            "content": {}
          },
          "404": {
            "description": "Department or referenced entity (manager, entity, company) not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/developer/sign-in": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "example": {
                  "password": "S1122001:)",
                  "username": "Admin"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "company": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "distribution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "totalDepartments": {
                          "type": "integer"
                        },
                        "totalNoEmp": {
                          "type": "integer"
                        },
                        "totalPositions": {
                          "type": "integer"
                        },
                        "totalTraining": {
                          "type": "integer"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "refresh_token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "role_id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Couldn't recieve the arguments",
            "content": {}
          },
          "401": {
            "description": "Invalid username or password",
            "content": {}
          },
          "404": {
            "description": "Company not found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/device": {
      "post": {
        "tags": [
          "Devices"
        ],
        "summary": "Add a new device",
        "responses": {
          "200": {
            "description": "Device added successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "device": {
                      "type": "object",
                      "properties": {
                        "company_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "device_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "device_ip": {
                          "type": "string",
                          "example": "192.168.1.1"
                        },
                        "device_port": {
                          "type": "integer",
                          "example": 8080
                        },
                        "device_type": {
                          "type": "string",
                          "example": "router"
                        },
                        "name": {
                          "type": "string",
                          "example": "Router1"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Device added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/device/reboot/{device_id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Reboot the devices",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "description": "ID of the device to retrieve it from the database",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully reboot devices",
            "content": {}
          },
          "400": {
            "description": "Bad request, invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Connection to the device failed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/device/{company_id}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Get devices of a company",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "ID of the company to retrieve it from the database",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved devices",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "company_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00.000Z"
                          },
                          "device_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "device_ip": {
                            "type": "string",
                            "example": "192.168.1.1"
                          },
                          "device_name": {
                            "type": "string",
                            "example": "Main Router"
                          },
                          "device_port": {
                            "type": "integer",
                            "example": 8080
                          },
                          "device_type": {
                            "type": "string",
                            "example": "Router"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-08-26T00:00:00.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Company ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/device/{device_id}": {
      "patch": {
        "tags": [
          "Devices"
        ],
        "summary": "Update Device",
        "description": "Updates the details of a specified device.",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "description": "ID of the device to be updated.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "The ID of the company associated with the device."
                  },
                  "device_ip": {
                    "type": "string",
                    "description": "The IP address of the device."
                  },
                  "device_name": {
                    "type": "string",
                    "description": "The name of the device."
                  },
                  "device_port": {
                    "type": "integer",
                    "description": "The port number for the device."
                  },
                  "device_type": {
                    "type": "string",
                    "description": "The type of the device."
                  },
                  "entity_id": {
                    "type": "integer",
                    "description": "The ID of the entity associated with the device."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Device updated successfully.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "device": {
                      "type": "object",
                      "properties": {
                        "company_id": {
                          "type": "integer"
                        },
                        "device_ip": {
                          "type": "string"
                        },
                        "device_name": {
                          "type": "string"
                        },
                        "device_port": {
                          "type": "integer"
                        },
                        "device_type": {
                          "type": "string"
                        },
                        "entity_id": {
                          "type": "integer"
                        },
                        "id": {
                          "type": "integer"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Device updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request due to missing required parameters or invalid JSON.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/education": {
      "post": {
        "tags": [
          "Education"
        ],
        "summary": "Add a new education record for the authenticated employee.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "degree_name": {
                    "type": "string",
                    "description": "The name of the degree to be added."
                  },
                  "institution_name": {
                    "type": "string",
                    "description": "The name of the institution where the degree was obtained."
                  },
                  "passing_year": {
                    "type": "integer",
                    "description": "The year the degree was obtained."
                  },
                  "precentage": {
                    "type": "number",
                    "description": "The percentage obtained in the degree.",
                    "format": "float"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Education record added successfully.",
            "content": {}
          },
          "400": {
            "description": "Invalid request or missing required fields.",
            "content": {}
          },
          "404": {
            "description": "Employee not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/education/": {
      "get": {
        "tags": [
          "Education"
        ],
        "summary": "Get education records for an employee.",
        "responses": {
          "200": {
            "description": "A list of education records for the employee.",
            "content": {}
          },
          "404": {
            "description": "Employee not found or no education records found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/education/{employee_id}": {
      "get": {
        "tags": [
          "Education"
        ],
        "summary": "Get education records for an employee.",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The ID of the employee whose education records are to be retrieved. If not provided, it fetches the authenticated user's records.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "A list of education records for the employee.",
            "content": {}
          },
          "404": {
            "description": "Employee not found or no education records found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/employee/celebration": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get upcoming employee celebrations (birthdays and hire anniversaries)",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "List of employees with upcoming celebrations.",
            "content": {}
          },
          "404": {
            "description": "No employees found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/employee/details": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employee details",
        "responses": {
          "200": {
            "description": "List of employees",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employee": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "city": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "name": {
                                  "type": "string",
                                  "example": "city name"
                                }
                              }
                            },
                            "country": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "name": {
                                  "type": "string",
                                  "example": "country name"
                                }
                              }
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "state": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "name": {
                                  "type": "string",
                                  "example": "state name"
                                }
                              }
                            },
                            "street_name": {
                              "type": "string",
                              "example": "street name"
                            }
                          }
                        },
                        "biometric_id": {
                          "type": "integer",
                          "example": 28
                        },
                        "blood_group": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "example": "B+"
                            }
                          }
                        },
                        "company": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "example": "UAE"
                            },
                            "email": {
                              "type": "string",
                              "example": "example@gmail.com"
                            },
                            "name": {
                              "type": "string",
                              "example": "Aqary Int"
                            },
                            "phone": {
                              "type": "string",
                              "example": "390856345"
                            }
                          }
                        },
                        "date_of_marriage": {
                          "type": "string",
                          "example": "2020-01-01T00:00:00.000Z"
                        },
                        "department": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "example": "IT"
                            }
                          }
                        },
                        "education_qualifications": {
                          "type": "object",
                          "properties": {
                            "degree_name": {
                              "type": "string",
                              "example": "Computer Science"
                            },
                            "id": {
                              "type": "integer",
                              "example": 2
                            },
                            "institution_name": {
                              "type": "string",
                              "example": "US university"
                            },
                            "passing_year": {
                              "type": "string",
                              "example": "2021-06"
                            },
                            "precentage": {
                              "type": "string",
                              "example": "90%"
                            }
                          }
                        },
                        "email": {
                          "type": "string",
                          "example": "email@example.net"
                        },
                        "emergency_contacts": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "example": "relation_email@example.net"
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "Jack"
                            },
                            "phone": {
                              "type": "string",
                              "example": "45654376588"
                            },
                            "relation": {
                              "type": "string",
                              "example": "cousin"
                            }
                          }
                        },
                        "employee_id": {
                          "type": "integer",
                          "example": 23
                        },
                        "gender": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "example": "male"
                            }
                          }
                        },
                        "gov_id_no": {
                          "type": "string",
                          "example": "46235624562456"
                        },
                        "hire_date": {
                          "type": "string",
                          "example": "2020-01-11T00:00:00.000Z"
                        },
                        "labour_card_no": {
                          "type": "string",
                          "example": "3453467897534"
                        },
                        "localized_name": {
                          "type": "string",
                          "example": "localized name"
                        },
                        "manager": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "manager name"
                            }
                          }
                        },
                        "manager_id": {
                          "type": "integer",
                          "example": 2
                        },
                        "marital_status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "example": "married"
                            }
                          }
                        },
                        "mother_name": {
                          "type": "string",
                          "example": "mother name"
                        },
                        "nationality": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 2
                            },
                            "name": {
                              "type": "string",
                              "example": "American"
                            }
                          }
                        },
                        "passport_no": {
                          "type": "string",
                          "example": "AF1231223"
                        },
                        "personal_email": {
                          "type": "string",
                          "example": "personal_email@example.net"
                        },
                        "phone": {
                          "type": "string",
                          "example": "390856345"
                        },
                        "position": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "example": "ML"
                            }
                          }
                        },
                        "user_id": {
                          "type": "integer",
                          "example": 23
                        },
                        "visa_type": {
                          "type": "object"
                        },
                        "work_exporiance": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "from_date": {
                                "type": "string",
                                "example": "2020-01-01T00:00:00.000Z"
                              },
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "job_desc": {
                                "type": "string",
                                "example": ""
                              },
                              "job_title": {
                                "type": "string",
                                "example": "MLOps"
                              },
                              "to_date": {
                                "type": "string",
                                "example": "2020-01-11T00:00:00.000Z"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Company not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/employee/{company_id}/": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get all employees",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of employees",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "object",
                            "properties": {
                              "city": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "city name"
                                  }
                                }
                              },
                              "country": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "country name"
                                  }
                                }
                              },
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "state": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "state name"
                                  }
                                }
                              },
                              "street_name": {
                                "type": "string",
                                "example": "street name"
                              }
                            }
                          },
                          "biometric_id": {
                            "type": "integer",
                            "example": 28
                          },
                          "blood_group": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "B+"
                              }
                            }
                          },
                          "company": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "example": "UAE"
                              },
                              "email": {
                                "type": "string",
                                "example": "example@gmail.com"
                              },
                              "name": {
                                "type": "string",
                                "example": "Aqary Int"
                              },
                              "phone": {
                                "type": "string",
                                "example": "390856345"
                              }
                            }
                          },
                          "date_of_marriage": {
                            "type": "string",
                            "example": "2020-01-01T00:00:00.000Z"
                          },
                          "department": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "IT"
                              }
                            }
                          },
                          "education_qualifications": {
                            "type": "object",
                            "properties": {
                              "degree_name": {
                                "type": "string",
                                "example": "Computer Science"
                              },
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "institution_name": {
                                "type": "string",
                                "example": "US university"
                              },
                              "passing_year": {
                                "type": "string",
                                "example": "2021-06"
                              },
                              "percentage": {
                                "type": "string",
                                "example": "90%"
                              }
                            }
                          },
                          "email": {
                            "type": "string",
                            "example": "wilsonkimberly1@example.net"
                          },
                          "emergency_contacts": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "example": "relation_email@example.net"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "Jack"
                              },
                              "phone": {
                                "type": "string",
                                "example": "45654376588"
                              },
                              "relation": {
                                "type": "string",
                                "example": "cousin"
                              }
                            }
                          },
                          "employee_id": {
                            "type": "integer",
                            "example": 23
                          },
                          "gender": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "male"
                              }
                            }
                          },
                          "gov_id_no": {
                            "type": "string",
                            "example": "46235624562456"
                          },
                          "hire_date": {
                            "type": "string",
                            "example": "2020-01-11T00:00:00.000Z"
                          },
                          "labour_card_no": {
                            "type": "string",
                            "example": "3453467897534"
                          },
                          "localized_name": {
                            "type": "string",
                            "example": "localized name"
                          },
                          "manager": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "manager name"
                              }
                            }
                          },
                          "manager_id": {
                            "type": "integer",
                            "example": 2
                          },
                          "marital_status": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "married"
                              }
                            }
                          },
                          "mother_name": {
                            "type": "string",
                            "example": "mother name"
                          },
                          "nationality": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "American"
                              }
                            }
                          },
                          "passport_no": {
                            "type": "string",
                            "example": "AF1231223"
                          },
                          "personal_email": {
                            "type": "string",
                            "example": "personal_email@example.net"
                          },
                          "phone": {
                            "type": "string",
                            "example": "390856345"
                          },
                          "position": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "ML"
                              }
                            }
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 23
                          },
                          "visa_type": {
                            "type": "object",
                            "properties": {
                              "expire_date": {
                                "type": "string",
                                "example": "2020-01-11T00:00:00.000Z"
                              },
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "Visit"
                              }
                            }
                          },
                          "work_experience": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "from_date": {
                                  "type": "string",
                                  "example": "2020-01-01T00:00:00.000Z"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "job_desc": {
                                  "type": "string",
                                  "example": ""
                                },
                                "job_title": {
                                  "type": "string",
                                  "example": "MLOps"
                                },
                                "to_date": {
                                  "type": "string",
                                  "example": "2020-01-11T00:00:00.000Z"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't receive the arguments"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Company not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/employee/{company_id}/page/{page_no}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get all employees",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "required": true,
            "schema": {}
          },
          {
            "name": "page_no",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of employees",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "object",
                            "properties": {
                              "city": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "city name"
                                  }
                                }
                              },
                              "country": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "country name"
                                  }
                                }
                              },
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "state": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "state name"
                                  }
                                }
                              },
                              "street_name": {
                                "type": "string",
                                "example": "street name"
                              }
                            }
                          },
                          "biometric_id": {
                            "type": "integer",
                            "example": 28
                          },
                          "blood_group": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "B+"
                              }
                            }
                          },
                          "company": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "example": "UAE"
                              },
                              "email": {
                                "type": "string",
                                "example": "example@gmail.com"
                              },
                              "name": {
                                "type": "string",
                                "example": "Aqary Int"
                              },
                              "phone": {
                                "type": "string",
                                "example": "390856345"
                              }
                            }
                          },
                          "date_of_marriage": {
                            "type": "string",
                            "example": "2020-01-01T00:00:00.000Z"
                          },
                          "department": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "IT"
                              }
                            }
                          },
                          "education_qualifications": {
                            "type": "object",
                            "properties": {
                              "degree_name": {
                                "type": "string",
                                "example": "Computer Science"
                              },
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "institution_name": {
                                "type": "string",
                                "example": "US university"
                              },
                              "passing_year": {
                                "type": "string",
                                "example": "2021-06"
                              },
                              "percentage": {
                                "type": "string",
                                "example": "90%"
                              }
                            }
                          },
                          "email": {
                            "type": "string",
                            "example": "wilsonkimberly1@example.net"
                          },
                          "emergency_contacts": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string",
                                "example": "relation_email@example.net"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "Jack"
                              },
                              "phone": {
                                "type": "string",
                                "example": "45654376588"
                              },
                              "relation": {
                                "type": "string",
                                "example": "cousin"
                              }
                            }
                          },
                          "employee_id": {
                            "type": "integer",
                            "example": 23
                          },
                          "gender": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "male"
                              }
                            }
                          },
                          "gov_id_no": {
                            "type": "string",
                            "example": "46235624562456"
                          },
                          "hire_date": {
                            "type": "string",
                            "example": "2020-01-11T00:00:00.000Z"
                          },
                          "labour_card_no": {
                            "type": "string",
                            "example": "3453467897534"
                          },
                          "localized_name": {
                            "type": "string",
                            "example": "localized name"
                          },
                          "manager": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "manager name"
                              }
                            }
                          },
                          "manager_id": {
                            "type": "integer",
                            "example": 2
                          },
                          "marital_status": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "married"
                              }
                            }
                          },
                          "mother_name": {
                            "type": "string",
                            "example": "mother name"
                          },
                          "nationality": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "American"
                              }
                            }
                          },
                          "passport_no": {
                            "type": "string",
                            "example": "AF1231223"
                          },
                          "personal_email": {
                            "type": "string",
                            "example": "personal_email@example.net"
                          },
                          "phone": {
                            "type": "string",
                            "example": "390856345"
                          },
                          "position": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "ML"
                              }
                            }
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 23
                          },
                          "visa_type": {
                            "type": "object",
                            "properties": {
                              "expire_date": {
                                "type": "string",
                                "example": "2020-01-11T00:00:00.000Z"
                              },
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "Visit"
                              }
                            }
                          },
                          "work_experience": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "from_date": {
                                  "type": "string",
                                  "example": "2020-01-01T00:00:00.000Z"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "job_desc": {
                                  "type": "string",
                                  "example": ""
                                },
                                "job_title": {
                                  "type": "string",
                                  "example": "MLOps"
                                },
                                "to_date": {
                                  "type": "string",
                                  "example": "2020-01-11T00:00:00.000Z"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't receive the arguments"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Company not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/employee/{employee_id}": {
      "patch": {
        "tags": [
          "Employee"
        ],
        "summary": "Update employee details",
        "description": "Updates the details of an employee based on the provided employee ID.",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The ID of the employee to be updated.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "description": "The JSON object containing the employee details to be updated.",
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "address_id": {
                    "type": "integer"
                  },
                  "biometric_id": {
                    "type": "string"
                  },
                  "blood_group_id": {
                    "type": "integer"
                  },
                  "company_id": {
                    "type": "integer"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date"
                  },
                  "date_of_marriage": {
                    "type": "string",
                    "format": "date"
                  },
                  "department_id": {
                    "type": "integer"
                  },
                  "education_qualifications_id": {
                    "type": "integer"
                  },
                  "emergency_contacts_id": {
                    "type": "integer"
                  },
                  "entity_id": {
                    "type": "integer"
                  },
                  "gender_id": {
                    "type": "integer"
                  },
                  "gov_id_no": {
                    "type": "string"
                  },
                  "hire_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "labour_card_no": {
                    "type": "string"
                  },
                  "localized_name": {
                    "type": "string"
                  },
                  "manager_id": {
                    "type": "integer"
                  },
                  "marital_status_id": {
                    "type": "integer"
                  },
                  "mother_name": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nationality_id": {
                    "type": "integer"
                  },
                  "passport_no": {
                    "type": "string"
                  },
                  "personal_email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "position_id": {
                    "type": "integer"
                  },
                  "shift_id": {
                    "type": "integer"
                  },
                  "visa_type_id": {
                    "type": "integer"
                  },
                  "work_experiance_id": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employee": {
                      "type": "object",
                      "properties": {},
                      "description": "The updated employee details"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/experiance": {
      "post": {
        "tags": [
          "Experience"
        ],
        "summary": "Add a new work experience record for the authenticated employee.",
        "description": "<br/>",
        "requestBody": {
          "description": "The ID of the department to update.",
          "content": {
            "*/*": {
              "schema": {
                "required": [
                  "company_name",
                  "from_date",
                  "job_desc",
                  "job_title",
                  "to_date"
                ],
                "type": "object",
                "properties": {
                  "company_name": {
                    "type": "string",
                    "description": "The name of the company where the employee worked."
                  },
                  "from_date": {
                    "type": "string",
                    "description": "The start date of the employment.",
                    "format": "date"
                  },
                  "job_desc": {
                    "type": "string",
                    "description": "A description of the job responsibilities."
                  },
                  "job_title": {
                    "type": "string",
                    "description": "The title of the job held by the employee."
                  },
                  "to_date": {
                    "type": "string",
                    "description": "The end date of the employment.",
                    "format": "date"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Work experience record added successfully.",
            "content": {}
          },
          "400": {
            "description": "Invalid request or missing required fields.",
            "content": {}
          },
          "404": {
            "description": "Employee not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "department"
      }
    },
    "/api/v1/experiance/": {
      "get": {
        "tags": [
          "Experience"
        ],
        "summary": "Retrieve experience records for an employee.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "A list of experience records for the employee.",
            "content": {}
          },
          "404": {
            "description": "Employee not found or no experience records found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/experiance/{employee_id}": {
      "get": {
        "tags": [
          "Experience"
        ],
        "summary": "Retrieve experience records for an employee.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "The ID of the employee whose experience records are to be retrieved. If not provided, it fetches the authenticated user's records.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "A list of experience records for the employee.",
            "content": {}
          },
          "404": {
            "description": "Employee not found or no experience records found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/experiance/{experiance_id}": {
      "patch": {
        "tags": [
          "Experience"
        ],
        "summary": "Update an existing work experience record for the authenticated employee.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "experiance_id",
            "in": "path",
            "description": "The ID of the work experience record to be updated.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_name": {
                    "type": "string",
                    "description": "The name of the company."
                  },
                  "from_date": {
                    "type": "string",
                    "description": "The start date of the employment.",
                    "format": "date"
                  },
                  "job_title": {
                    "type": "string",
                    "description": "The title of the job."
                  },
                  "to_date": {
                    "type": "string",
                    "description": "The end date of the employment.",
                    "format": "date"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Work experience record updated successfully.",
            "content": {}
          },
          "404": {
            "description": "Work experience not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/leave/request": {
      "post": {
        "tags": [
          "Leave"
        ],
        "summary": "Add New Leave Request",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "employee_id": {
                    "type": "integer",
                    "description": "ID of the employee requesting leave",
                    "example": 28
                  },
                  "end_date": {
                    "type": "string",
                    "description": "End date of the leave",
                    "example": "2024-10-10T00:00:00.000Z"
                  },
                  "file_url": {
                    "type": "string",
                    "description": "URL of any attached file (optional)",
                    "example": "null"
                  },
                  "has_certificate": {
                    "type": "boolean",
                    "description": "Whether a certificate is provided",
                    "example": false
                  },
                  "leave_type_id": {
                    "type": "integer",
                    "description": "ID of the leave type",
                    "example": 1
                  },
                  "start_date": {
                    "type": "string",
                    "description": "Start date of the leave",
                    "example": "2024-10-01T00:00:00.000Z"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the leave request (e.g., pending, approved, denied)",
                    "example": "pending"
                  }
                },
                "example": {
                  "employee_id": 28,
                  "end_date": "2024-10-10T00:00:00.000Z",
                  "has_certificate": false,
                  "leave_type_id": 1,
                  "start_date": "2024-10-01T00:00:00.000Z",
                  "status": "pending"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Leave request added successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_request": {
                      "type": "object",
                      "properties": {
                        "approver_id": {
                          "type": "integer"
                        },
                        "employee_id": {
                          "type": "integer",
                          "example": 28
                        },
                        "end_date": {
                          "type": "string",
                          "example": "2024-10-10T00:00:00.000Z"
                        },
                        "file_url": {
                          "type": "string",
                          "example": "null"
                        },
                        "has_certificate": {
                          "type": "boolean",
                          "example": false
                        },
                        "id": {
                          "type": "integer",
                          "example": 40
                        },
                        "leave_type_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "start_date": {
                          "type": "string",
                          "example": "2024-10-01T00:00:00.000Z"
                        },
                        "status": {
                          "type": "string",
                          "example": "pending"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Leave request added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Couldn't receive the arguments"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/leave/request/": {
      "get": {
        "tags": [
          "Leave"
        ],
        "summary": "Get leave requests",
        "responses": {
          "200": {
            "description": "Successful response with leave requests",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_requests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "leave_requests_list": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "approver": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "example": 25
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Mohamed Saif Eldeen"
                                    }
                                  }
                                },
                                "employee": {
                                  "type": "string",
                                  "example": "Steven Waheed saad"
                                },
                                "end_date": {
                                  "type": "string",
                                  "example": "2024-10-10T00:00:00.000Z"
                                },
                                "file_url": {
                                  "type": "string",
                                  "example": "https://aqaryhrms.blob.core.windows.net/hrms/R2HOUD5KWCMF8CC1.jpg"
                                },
                                "has_certificate": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 27
                                },
                                "leave_type": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Sick Leave"
                                    }
                                  }
                                },
                                "start_date": {
                                  "type": "string",
                                  "example": "2024-10-01T00:00:00.000Z"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "pending"
                                }
                              }
                            }
                          },
                          "no_of_leave_requests": {
                            "type": "integer",
                            "example": 5
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Employee ID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "leave type not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No leave types"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leave/request/employee": {
      "get": {
        "tags": [
          "Leave"
        ],
        "summary": "Get leave requests",
        "responses": {
          "200": {
            "description": "List of leave requests",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_requests_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "approver": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "Manager name"
                              }
                            }
                          },
                          "employee": {
                            "type": "string",
                            "example": "Ali Deeb"
                          },
                          "end_date": {
                            "type": "string",
                            "example": "2024-10-10T00:00:00.000Z"
                          },
                          "file_url": {
                            "type": "string",
                            "example": "null"
                          },
                          "has_certificate": {
                            "type": "boolean",
                            "example": false
                          },
                          "id": {
                            "type": "integer",
                            "example": 32
                          },
                          "leave_type": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "leave_type": {
                                "type": "string",
                                "example": "Sick Leave"
                              }
                            }
                          },
                          "start_date": {
                            "type": "string",
                            "example": "2024-10-01T00:00:00.000Z"
                          },
                          "status": {
                            "type": "string",
                            "example": "pending"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leave/request/has-certificate/{has_certificate}": {
      "get": {
        "tags": [
          "Leave"
        ],
        "summary": "Get leave requests (with certificate / without certificate)",
        "parameters": [
          {
            "name": "has_certificate",
            "in": "path",
            "description": "Set it as (1, true, t) for requests that have certificates and\n(0, false, f) for ones that don't have certificates\n",
            "required": true,
            "schema": {}
          },
          {
            "name": "employee_id",
            "in": "query",
            "description": "ID of the employee to retrieve leave requests",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Leave requests successfully retrieved",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_requests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "approver": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string",
                                "example": "null"
                              }
                            }
                          },
                          "employee": {
                            "type": "string",
                            "example": "Ali Deeb"
                          },
                          "end_date": {
                            "type": "string",
                            "example": "2024-10-10T00:00:00.000Z"
                          },
                          "file_url": {
                            "type": "string",
                            "example": "null"
                          },
                          "has_certificate": {
                            "type": "boolean",
                            "example": false
                          },
                          "id": {
                            "type": "integer",
                            "example": 32
                          },
                          "leave_type": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "leave_type": {
                                "type": "string",
                                "example": "Sick Leave"
                              }
                            }
                          },
                          "start_date": {
                            "type": "string",
                            "example": "2024-10-01T00:00:00.000Z"
                          },
                          "status": {
                            "type": "string",
                            "example": "pending"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No leave requests found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leave/request/has-certificate/{has_certificate}/employee/{employee_id}": {
      "get": {
        "tags": [
          "Leave"
        ],
        "summary": "Get leave requests (with certificate / without certificate)",
        "parameters": [
          {
            "name": "has_certificate",
            "in": "path",
            "description": "Set it as (1, true, t) for requests that have certificates and\n(0, false, f) for ones that don't have certificates\n",
            "required": true,
            "schema": {}
          },
          {
            "name": "employee_id",
            "in": "path",
            "description": "ID of the employee to retrieve leave requests",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Leave requests successfully retrieved",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_requests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "approver": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string",
                                "example": "null"
                              }
                            }
                          },
                          "employee": {
                            "type": "string",
                            "example": "Ali Deeb"
                          },
                          "end_date": {
                            "type": "string",
                            "example": "2024-10-10T00:00:00.000Z"
                          },
                          "file_url": {
                            "type": "string",
                            "example": "null"
                          },
                          "has_certificate": {
                            "type": "boolean",
                            "example": false
                          },
                          "id": {
                            "type": "integer",
                            "example": 32
                          },
                          "leave_type": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "leave_type": {
                                "type": "string",
                                "example": "Sick Leave"
                              }
                            }
                          },
                          "start_date": {
                            "type": "string",
                            "example": "2024-10-01T00:00:00.000Z"
                          },
                          "status": {
                            "type": "string",
                            "example": "pending"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No leave requests found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leave/request/{employee_id}": {
      "get": {
        "tags": [
          "Leave"
        ],
        "summary": "Get leave requests",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "ID of the employee to retrieve leave requests",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with leave requests",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_requests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "leave_requests_list": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "approver": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "example": 25
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Mohamed Saif Eldeen"
                                    }
                                  }
                                },
                                "employee": {
                                  "type": "string",
                                  "example": "Steven Waheed saad"
                                },
                                "end_date": {
                                  "type": "string",
                                  "example": "2024-10-10T00:00:00.000Z"
                                },
                                "file_url": {
                                  "type": "string",
                                  "example": "https://aqaryhrms.blob.core.windows.net/hrms/R2HOUD5KWCMF8CC1.jpg"
                                },
                                "has_certificate": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 27
                                },
                                "leave_type": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Sick Leave"
                                    }
                                  }
                                },
                                "start_date": {
                                  "type": "string",
                                  "example": "2024-10-01T00:00:00.000Z"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "pending"
                                }
                              }
                            }
                          },
                          "no_of_leave_requests": {
                            "type": "integer",
                            "example": 5
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Employee ID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "leave type not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No leave types"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leave/request/{request_id}/{action}": {
      "patch": {
        "tags": [
          "Leave"
        ],
        "summary": "Update the action of a leave request",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "description": "ID of the leave request to update the status",
            "required": true,
            "schema": {}
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Leave request successfully updated",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_request": {
                      "type": "object",
                      "properties": {
                        "approver_id": {
                          "type": "integer",
                          "example": 25
                        },
                        "employee_id": {
                          "type": "integer",
                          "example": 24
                        },
                        "end_date": {
                          "type": "string",
                          "example": "2024-10-10T00:00:00.000Z"
                        },
                        "file_url": {
                          "type": "string",
                          "example": "null"
                        },
                        "has_certificate": {
                          "type": "boolean",
                          "example": false
                        },
                        "id": {
                          "type": "integer",
                          "example": 27
                        },
                        "leave_type_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "start_date": {
                          "type": "string",
                          "example": "2024-10-01T00:00:00.000Z"
                        },
                        "status": {
                          "type": "string",
                          "example": "denied"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/leave/type": {
      "get": {
        "tags": [
          "Leave"
        ],
        "summary": "Get leave types",
        "responses": {
          "200": {
            "description": "Successful response with leave types",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_types": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "company_id": {
                            "type": "integer",
                            "example": 2
                          },
                          "description": {
                            "type": "string",
                            "example": ""
                          },
                          "disbursement": {
                            "type": "string",
                            "example": "Yearly"
                          },
                          "entity_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Sick Leave"
                          },
                          "no_of_days": {
                            "type": "number",
                            "format": "float",
                            "example": 90
                          },
                          "status": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Company ID is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "No leave types"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Leave"
        ],
        "summary": "Add New Leave Type",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "ID of the company",
                    "example": 2
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the leave type",
                    "example": ""
                  },
                  "disbursement": {
                    "type": "string",
                    "description": "Leave disbursement type (e.g., monthly)",
                    "example": "monthly"
                  },
                  "entity_id": {
                    "type": "integer",
                    "description": "ID of the entity",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the leave type",
                    "example": "Sick leave"
                  },
                  "no_of_days": {
                    "type": "integer",
                    "description": "Number of leave days",
                    "example": 90
                  },
                  "status": {
                    "type": "boolean",
                    "description": "Active status of the leave type",
                    "example": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The new leave type.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leave_type": {
                      "type": "object",
                      "properties": {
                        "company_id": {
                          "type": "integer",
                          "example": 2
                        },
                        "description": {
                          "type": "string",
                          "example": ""
                        },
                        "disbursement": {
                          "type": "string",
                          "example": "monthly"
                        },
                        "entity_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Sick leave"
                        },
                        "no_of_days": {
                          "type": "integer",
                          "example": 90
                        },
                        "status": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Leave type added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't receive the arguments"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "example": {
                  "password": "S1122001:)",
                  "username": "Admin"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "company": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "distribution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "totalDepartments": {
                          "type": "integer"
                        },
                        "totalNoEmp": {
                          "type": "integer"
                        },
                        "totalPositions": {
                          "type": "integer"
                        },
                        "totalTraining": {
                          "type": "integer"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "refresh_token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "role_id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Couldn't recieve the arguments",
            "content": {}
          },
          "401": {
            "description": "Invalid username or password",
            "content": {}
          },
          "404": {
            "description": "Company not found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/position": {
      "post": {
        "tags": [
          "Positions"
        ],
        "summary": "Add a new position",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "integer",
                    "description": "ID of the company offering the position",
                    "example": 1
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the position",
                    "example": "Responsible for developing and maintaining software applications."
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the position",
                    "example": "Software Engineer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Position added successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Position added successfully"
                    },
                    "position": {
                      "title": "",
                      "type": "object",
                      "properties": {},
                      "description": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/position/{company_id}": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Get positions of a company",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "ID of the company to retrieve positions for",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved positions",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "positions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-01-01T00:00:00.000Z"
                          },
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "title": {
                            "type": "string",
                            "example": "Software Engineer"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-08-26T00:00:00.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Company ID is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/position/{position_id}": {
      "patch": {
        "tags": [
          "Positions"
        ],
        "summary": "Update an existing position for a specific ID.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "position_id",
            "in": "path",
            "description": "The ID of the position to be updated.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The new description for the position (optional)."
                  },
                  "title": {
                    "type": "string",
                    "description": "The new title for the position (optional)."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Position updated successfully.",
            "content": {}
          },
          "404": {
            "description": "Position not found or failed to receive data.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/post": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create a New Post",
        "description": "This endpoint allows an authenticated employee to create a new post with a title, description, and an optional file attachment.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token to authorize user.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "description",
                  "title"
                ],
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the post."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description or content of the post."
                  },
                  "file": {
                    "type": "string",
                    "description": "Optional file attachment for the post.",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Post successfully created",
            "content": {}
          },
          "400": {
            "description": "Bad request due to missing required fields or file upload issues",
            "content": {}
          },
          "404": {
            "description": "Employee not found",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/post/": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Retrieve posts or a single post by ID",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Successfully retrieved post(s).",
            "content": {}
          },
          "404": {
            "description": "Post not found.",
            "content": {}
          }
        }
      }
    },
    "/api/v1/post/comment": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Add a Comment to a Post",
        "description": "Allows an authenticated employee to add a comment to a specific post. Supports nested comments and optional file attachment.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token to authorize user.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "comment",
                  "post_id"
                ],
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "The comment content."
                  },
                  "post_id": {
                    "type": "integer",
                    "description": "The ID of the post being commented on.",
                    "format": "int32"
                  },
                  "parent_comment_id": {
                    "type": "integer",
                    "description": "The ID of the parent comment if replying to an existing comment.",
                    "format": "int32"
                  },
                  "file": {
                    "type": "string",
                    "description": "Optional file attachment for the comment.",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Comment successfully added",
            "content": {}
          },
          "400": {
            "description": "Bad request due to missing post ID, comment, or invalid JSON",
            "content": {}
          },
          "404": {
            "description": "Employee not found",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/post/comment/{post_id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Retrieve all comments for a specific post in a tree structure",
        "description": "<br/>",
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "description": "The ID of the post for which to fetch comments.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved comments.",
            "content": {}
          },
          "404": {
            "description": "Post not found.",
            "content": {}
          },
          "500": {
            "description": "Error occurred while fetching comments.",
            "content": {}
          }
        }
      }
    },
    "/api/v1/post/like": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Like a Post",
        "description": "Allows an authenticated employee to like a specific post.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT token to authorize user.",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "post_id": {
                    "type": "integer",
                    "description": "The ID of the post to like.",
                    "example": 1
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Like successfully added to the post",
            "content": {}
          },
          "400": {
            "description": "Bad request due to missing post ID or invalid JSON",
            "content": {}
          },
          "404": {
            "description": "Employee or post not found",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "post_id"
      }
    },
    "/api/v1/post/{post_id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Retrieve posts or a single post by ID",
        "description": "<br/>",
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "description": "The ID of the post to retrieve.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved post(s).",
            "content": {}
          },
          "404": {
            "description": "Post not found.",
            "content": {}
          }
        }
      }
    },
    "/api/v1/profile": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Create a new profile for the authenticated employee.",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "required": [
                  "display_name"
                ],
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "Display name for the profile."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Profile created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "profile": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "type": "string",
                          "description": "Bio of the profile."
                        },
                        "display_name": {
                          "type": "string",
                          "description": "Display name of the profile."
                        },
                        "employee": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "ID of the employee associated with the profile."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the employee."
                            }
                          }
                        },
                        "followers": {
                          "type": "integer",
                          "description": "Number of followers of the profile."
                        },
                        "followings": {
                          "type": "integer",
                          "description": "Number of people the profile is following."
                        },
                        "id": {
                          "type": "integer",
                          "description": "ID of the new profile."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message indicating why the request failed."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profile/": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve profile information for the authenticated user or a specific profile by ID.",
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employee": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "Address of the employee."
                        },
                        "bio": {
                          "type": "string",
                          "description": "Bio of the employee."
                        },
                        "department": {
                          "type": "string",
                          "description": "Department of the employee."
                        },
                        "education_qualifications": {
                          "type": "string",
                          "description": "Educational qualifications of the employee."
                        },
                        "email": {
                          "type": "string",
                          "description": "Personal email of the employee."
                        },
                        "followers": {
                          "type": "integer",
                          "description": "Number of followers the employee has."
                        },
                        "followings": {
                          "type": "integer",
                          "description": "Number of people the employee is following."
                        },
                        "gender": {
                          "type": "string",
                          "description": "Gender of the employee."
                        },
                        "id": {
                          "type": "integer",
                          "description": "Unique identifier for the employee."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the employee."
                        },
                        "nationality": {
                          "type": "string",
                          "description": "Nationality of the employee."
                        },
                        "phone": {
                          "type": "string",
                          "description": "Phone number of the employee."
                        },
                        "position": {
                          "type": "string",
                          "description": "Position of the employee."
                        },
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {},
                            "description": "List of posts created by the employee."
                          }
                        },
                        "work_experience": {
                          "type": "string",
                          "description": "Work experience details of the employee."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating profile was not found."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/profile/follow": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Follow or unfollow a profile.",
        "requestBody": {
          "description": "The JSON object containing the employee details to be updated.",
          "content": {
            "*/*": {
              "schema": {
                "required": [
                  "profile_id"
                ],
                "type": "object",
                "properties": {
                  "profile_id": {
                    "type": "integer",
                    "description": "The ID of the profile to follow or unfollow."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Follow status updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followed": {
                      "type": "object",
                      "properties": {
                        "followers": {
                          "type": "integer",
                          "description": "Number of followers the followed profile has."
                        },
                        "followings": {
                          "type": "integer",
                          "description": "Number of people the followed profile is following."
                        },
                        "id": {
                          "type": "integer",
                          "description": "ID of the followed profile."
                        },
                        "name": {
                          "type": "string",
                          "description": "Display name of the followed profile."
                        }
                      }
                    },
                    "follower": {
                      "type": "object",
                      "properties": {
                        "followers": {
                          "type": "integer",
                          "description": "Number of followers the follower profile has."
                        },
                        "followings": {
                          "type": "integer",
                          "description": "Number of people the follower profile is following."
                        },
                        "id": {
                          "type": "integer",
                          "description": "ID of the follower profile."
                        },
                        "name": {
                          "type": "string",
                          "description": "Display name of the follower."
                        }
                      }
                    },
                    "id": {
                      "type": "integer",
                      "description": "ID of the follow relationship."
                    },
                    "message": {
                      "type": "string",
                      "description": "Message indicating the action performed."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message indicating why the request failed."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/profile/{profile_id}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve profile information for the authenticated user or a specific profile by ID.",
        "parameters": [
          {
            "name": "profile_id",
            "in": "path",
            "description": "ID of the profile to retrieve. If not provided, retrieves the profile of the current authenticated user.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employee": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "Address of the employee."
                        },
                        "bio": {
                          "type": "string",
                          "description": "Bio of the employee."
                        },
                        "department": {
                          "type": "string",
                          "description": "Department of the employee."
                        },
                        "education_qualifications": {
                          "type": "string",
                          "description": "Educational qualifications of the employee."
                        },
                        "email": {
                          "type": "string",
                          "description": "Personal email of the employee."
                        },
                        "followers": {
                          "type": "integer",
                          "description": "Number of followers the employee has."
                        },
                        "followings": {
                          "type": "integer",
                          "description": "Number of people the employee is following."
                        },
                        "gender": {
                          "type": "string",
                          "description": "Gender of the employee."
                        },
                        "id": {
                          "type": "integer",
                          "description": "Unique identifier for the employee."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the employee."
                        },
                        "nationality": {
                          "type": "string",
                          "description": "Nationality of the employee."
                        },
                        "phone": {
                          "type": "string",
                          "description": "Phone number of the employee."
                        },
                        "position": {
                          "type": "string",
                          "description": "Position of the employee."
                        },
                        "posts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {},
                            "description": "List of posts created by the employee."
                          }
                        },
                        "work_experience": {
                          "type": "string",
                          "description": "Work experience details of the employee."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Profile not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message indicating profile was not found."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/applicant": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve applicant(s).",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Applicant not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Add a new applicant.",
        "description": "<br/>",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "cover_letter": {
                    "type": "string",
                    "description": "Cover letter for the application",
                    "example": "I am very interested in this position..."
                  },
                  "current_company": {
                    "type": "string",
                    "description": "Current company of the applicant",
                    "example": "Tech Inc."
                  },
                  "current_position": {
                    "type": "string",
                    "description": "Current position of the applicant",
                    "example": "Software Engineer"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address of the applicant",
                    "example": "johndoe@example.com"
                  },
                  "expected_salary": {
                    "type": "number",
                    "description": "Expected salary",
                    "format": "float",
                    "example": 70000
                  },
                  "external_application_id": {
                    "type": "string",
                    "description": "External application ID from the platform",
                    "example": "EXT-12345"
                  },
                  "file_name": {
                    "type": "string",
                    "description": "File name of the resume",
                    "example": "resume.pdf"
                  },
                  "file_path": {
                    "type": "string",
                    "description": "File path of the resume",
                    "example": "/uploads/resumes/resume.pdf"
                  },
                  "file_type": {
                    "type": "string",
                    "description": "File type of the resume",
                    "example": "PDF"
                  },
                  "first_name": {
                    "type": "string",
                    "description": "First name of the applicant",
                    "example": "John"
                  },
                  "job_id": {
                    "type": "integer",
                    "description": "ID of the job the applicant is applying for",
                    "example": 1
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Last name of the applicant",
                    "example": "Doe"
                  },
                  "linkedin_profile": {
                    "type": "string",
                    "description": "LinkedIn profile URL",
                    "example": "https://linkedin.com/in/johndoe"
                  },
                  "notice_period_days": {
                    "type": "integer",
                    "description": "Notice period in days",
                    "example": 30
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number of the applicant",
                    "example": "+1234567890"
                  },
                  "platform_id": {
                    "type": "integer",
                    "description": "ID of the platform where the application was submitted",
                    "example": 2
                  },
                  "portfolio_url": {
                    "type": "string",
                    "description": "Portfolio URL",
                    "example": "https://johndoe.com/portfolio"
                  },
                  "salary_currency": {
                    "type": "string",
                    "description": "Currency for the expected salary",
                    "example": "USD"
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of the application",
                    "example": "Referral"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the application",
                    "example": "Pending"
                  },
                  "total_experience_years": {
                    "type": "integer",
                    "description": "Total years of experience",
                    "example": 5
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Applicant successfully added",
            "content": {}
          },
          "400": {
            "description": "Bad request due to missing or invalid fields",
            "content": {}
          },
          "404": {
            "description": "Related resource not found (e.g., job, platform, or skill)",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "platform_name"
      }
    },
    "/api/v1/recruitment/applicant-skill": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve applicant skills.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Applicant skill not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/applicant-skill/{applicant_skill_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve applicant skills.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "applicant_skill_id",
            "in": "path",
            "description": "The ID of the specific applicant skill to retrieve. If not provided, all applicant skills will be returned.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Applicant skill not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/applicant/{applicant_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve applicant(s).",
        "description": "<br/>",
        "parameters": [
          {
            "name": "applicant_id",
            "in": "path",
            "description": "The unique ID of the applicant.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Applicant not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/application/job/{job_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve applications by job ID.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "The unique ID of the job posting.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "No applications found for the given job ID.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/application/platform/{platform_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve applications by platform ID.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "platform_id",
            "in": "path",
            "description": "The unique ID of the job platform.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "No applications found for the given platform ID.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/employment-type": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve employment type(s).",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Employment type not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Add a new employment type.",
        "description": "<br/>",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "employment_name": {
                    "type": "string",
                    "description": "Name of the employment type",
                    "example": "Full-time"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Employment type successfully added",
            "content": {}
          },
          "400": {
            "description": "Failed to add employment type",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "platform_name"
      }
    },
    "/api/v1/recruitment/employment-type/{employment_type_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve employment type(s).",
        "description": "<br/>",
        "parameters": [
          {
            "name": "employment_type_id",
            "in": "path",
            "description": "The unique ID of the employment type.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Employment type not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/location": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job location information.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication failed.",
            "content": {}
          },
          "404": {
            "description": "Location not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Add a new job location.",
        "description": "<br/>",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Full address of the location",
                    "example": "123 Tech Park, Suite 45"
                  },
                  "city_id": {
                    "type": "integer",
                    "description": "ID of the city",
                    "example": 12
                  },
                  "country_id": {
                    "type": "integer",
                    "description": "ID of the country",
                    "example": 1
                  },
                  "state_id": {
                    "type": "integer",
                    "description": "ID of the state",
                    "example": 5
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Job location successfully added",
            "content": {}
          },
          "400": {
            "description": "Bad request due to missing or invalid fields",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "platform_name"
      }
    },
    "/api/v1/recruitment/location/{location_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job location information.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The ID of the job location to retrieve.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication failed.",
            "content": {}
          },
          "404": {
            "description": "Location not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/platform": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve recruitment platform(s) information.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication failed.",
            "content": {}
          },
          "404": {
            "description": "Platform not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Add a new job platform.",
        "description": "<br/>",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "type": "string",
                    "description": "API key for the job platform",
                    "example": "your-api-key"
                  },
                  "api_secret": {
                    "type": "string",
                    "description": "API secret for the job platform",
                    "example": "your-api-secret"
                  },
                  "platform_name": {
                    "type": "string",
                    "description": "Name of the job platform",
                    "example": "LinkedIn"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Job platform successfully added",
            "content": {}
          },
          "400": {
            "description": "Bad request due to invalid or missing fields",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "platform_name"
      }
    },
    "/api/v1/recruitment/platform/{platform_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve recruitment platform(s) information.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "platform_id",
            "in": "path",
            "description": "The ID of the recruitment platform to retrieve.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication failed.",
            "content": {}
          },
          "404": {
            "description": "Platform not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/post": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job post details.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication failed.",
            "content": {}
          },
          "404": {
            "description": "Post not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Add a new job posting.",
        "description": "<br/>",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "category_id": {
                    "type": "integer",
                    "description": "ID of the job category",
                    "example": 2
                  },
                  "closing_date": {
                    "type": "string",
                    "description": "Date when the job posting will close",
                    "format": "date",
                    "example": "2024-12-15T00:00:00.000Z"
                  },
                  "department_id": {
                    "type": "integer",
                    "description": "ID of the department posting the job",
                    "example": 7
                  },
                  "employment_type_id": {
                    "type": "integer",
                    "description": "ID of the employment type",
                    "example": 3
                  },
                  "external_job_id": {
                    "type": "string",
                    "description": "External job ID from the platform",
                    "example": "12345-XYZ"
                  },
                  "job_description": {
                    "type": "string",
                    "description": "Detailed description of the job",
                    "example": "We are looking for a talented software engineer..."
                  },
                  "job_title": {
                    "type": "string",
                    "description": "Title of the job",
                    "example": "Software Engineer"
                  },
                  "location_id": {
                    "type": "integer",
                    "description": "ID of the job location",
                    "example": 5
                  },
                  "platform_id": {
                    "type": "integer",
                    "description": "ID of the job platform",
                    "example": 1
                  },
                  "posting_date": {
                    "type": "string",
                    "description": "Date when the job is posted",
                    "format": "date",
                    "example": "2024-11-22T00:00:00.000Z"
                  },
                  "proficiency_level": {
                    "type": "string",
                    "description": "Experience level required for the job",
                    "example": "Mid-level"
                  },
                  "requirements": {
                    "type": "string",
                    "description": "Job requirements",
                    "example": "Bachelor's degree in Computer Science, 3+ years of experience..."
                  },
                  "responsibilities": {
                    "type": "string",
                    "description": "Job responsibilities",
                    "example": "Develop and maintain web applications..."
                  },
                  "salary_currency": {
                    "type": "string",
                    "description": "Currency for the salary",
                    "example": "USD"
                  },
                  "salary_max": {
                    "type": "number",
                    "description": "Maximum salary offered",
                    "format": "float",
                    "example": 80000
                  },
                  "salary_min": {
                    "type": "number",
                    "description": "Minimum salary offered",
                    "format": "float",
                    "example": 50000
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the job posting",
                    "example": "Open"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Job posting successfully added",
            "content": {}
          },
          "400": {
            "description": "Bad request due to missing or invalid fields",
            "content": {}
          },
          "404": {
            "description": "Related resource not found (e.g., platform, category, location, department)",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-codegen-request-body-name": "platform_name"
      }
    },
    "/api/v1/recruitment/post/department/{department_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job postings by department ID.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "department_id",
            "in": "path",
            "description": "The unique ID of the department.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "No job postings found for the department.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/post/location/{location_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job postings by location ID.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "description": "The unique ID of the location.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "No job postings found for the location.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/post/page/{page_no}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job post details.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "page_no",
            "in": "path",
            "description": "The ID of the job post to retrieve.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication failed.",
            "content": {}
          },
          "404": {
            "description": "Post not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/post/platform/{platform_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job posts by platform ID.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "platform_id",
            "in": "path",
            "description": "The ID of the platform for which to retrieve job posts.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication failed.",
            "content": {}
          },
          "404": {
            "description": "No job posts found for the specified platform.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/post/{post_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job post details.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "description": "The ID of the job post to retrieve.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication failed.",
            "content": {}
          },
          "404": {
            "description": "Post not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/required-skill": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job required skills.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "No required skills found or the specified skill ID does not exist.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/required-skill/{required_skill_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve job required skills.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "required_skill_id",
            "in": "path",
            "description": "The unique ID of the required skill.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "No required skills found or the specified skill ID does not exist.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/resume": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve resume information.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Resume not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/resume/{resume_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve resume information.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "resume_id",
            "in": "path",
            "description": "The ID of the specific resume to retrieve. If not provided, all resumes will be returned.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Resume not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/skill": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve skill information.",
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Skill not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/recruitment/skill/{skill_id}": {
      "get": {
        "tags": [
          "Recruitment"
        ],
        "summary": "Retrieve skill information.",
        "description": "<br/>",
        "parameters": [
          {
            "name": "skill_id",
            "in": "path",
            "description": "The ID of the specific skill to retrieve. If not provided, all skills will be returned.",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Authentication required.",
            "content": {}
          },
          "404": {
            "description": "Skill not found.",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh the JWT access token",
        "responses": {
          "200": {
            "description": "New access token issued successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid, or expired refresh token.",
            "content": {}
          }
        }
      }
    },
    "/api/v1/role": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Add a new role",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_name": {
                    "type": "string",
                    "description": "Name of the role",
                    "example": "Admin"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role added successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Role added successfully"
                    },
                    "role": {
                      "type": "object",
                      "properties": {
                        "role_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "role_name": {
                          "type": "string",
                          "example": "Admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/salary": {
      "post": {
        "tags": [
          "Salaries"
        ],
        "summary": "Add a new salary",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount of the salary",
                    "format": "float",
                    "example": 50000
                  },
                  "effective_date": {
                    "type": "string",
                    "description": "Start date of the salary",
                    "format": "date",
                    "example": "2024-01-01T00:00:00.000Z"
                  },
                  "employee_id": {
                    "type": "integer",
                    "description": "ID of the employee receiving the salary",
                    "example": 1
                  },
                  "end_date": {
                    "type": "string",
                    "description": "End date of the salary",
                    "format": "date",
                    "example": "2024-12-31T00:00:00.000Z"
                  },
                  "is_current": {
                    "type": "boolean",
                    "description": "Whether this salary is the current one",
                    "example": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Salary added successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Salary added successfully"
                    },
                    "salary": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "example": 50000
                        },
                        "effective_date": {
                          "type": "string",
                          "example": "2024-01-01T00:00:00.000Z"
                        },
                        "employee_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "end_date": {
                          "type": "string",
                          "example": "2024-12-31T00:00:00.000Z"
                        },
                        "is_current": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api/v1/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a new user",
        "responses": {
          "200": {
            "description": "User added successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User added successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "role_id": {
                          "type": "integer",
                          "example": 2
                        },
                        "username": {
                          "type": "string",
                          "example": "johndoe"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input, or missing required fields",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sync/attendances/{company_id}": {
      "get": {
        "tags": [
          "Attendance"
        ],
        "summary": "Synchronize attendance records from devices and update the cache",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "description": "ID of the company whose devices are used for syncing attendance records",
            "required": true,
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully synchronized attendance records and updated the cache",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "employee_code": {
                            "type": "string",
                            "example": "12345"
                          },
                          "name": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "punch_time": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "device_id": {
                                  "type": "string",
                                  "example": "Device1"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-08-26T08:00:00.000Z"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Attendance synced successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Couldn't recieve the arguments"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}